import java.util.*;
import java.io.*;
public class Solution {
    
    public static int findMax(List<Stack<Integer>> stackList) {
        int max = Integer.MIN_VALUE;
        int indx = -1;
        for(int i = 0; i < stackList.size(); i++) {
            if(!stackList.get(i).isEmpty() && stackList.get(i).peek() > max) {
                max = stackList.get(i).peek();
                indx = i;
            }
        }

        stackList.get(indx).pop();
        return max;
    }
    
  public static void main(String[] args) {
    Scanner in = new Scanner(new BufferedReader(new InputStreamReader(System.in)));
    int t = in.nextInt(); // Scanner has functions to read ints, longs, strings, chars, etc.
    for (int tt = 1; tt <= t; ++tt) {
            int n = in.nextInt();
            int k = in.nextInt();
            int p = in.nextInt();

            List<Stack<Integer>> stackList = new ArrayList<Stack<Integer>>();

            for(int i = 0; i < n; i++) {
                Stack<Integer> stack = new Stack<>();
                int[] temp = new int[k];
                for(int j = 0; j < k; j++) {
                    temp[j] = in.nextInt();
                }
                for(int j = temp.length-1; j>=0; j--) {
                    stack.push(temp[j]);
                }
                stackList.add(stack);
            }

            int sum = 0, count = 0;


            while(count < p) {
                sum = sum + findMax(stackList);
                count++;
            }
            System.out.println("Case #" + tt + ": " + sum);
        }
  }
}